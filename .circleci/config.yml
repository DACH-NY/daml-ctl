#
# Copyright (c) 2021, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

version: 2.1

executors:
  daml-docker-executor:
    docker:
      - image: cimg/openjdk:11.0

commands:
  install_sdk:
    description: "Install Daml SDK"
    steps:
      - run:
          name: Install Daml SDK
          command: |
            curl -sSL https://get.daml.com/ | sh /dev/stdin ${SDK_VERSION}
            # idea from https://circleci.com/docs/2.0/env-vars/
            >> $BASH_ENV echo 'export PATH="$HOME/.daml/bin:$PATH"'
  install_yq:
    description: "Install yq from binary"
    steps:
      - run:
          name: Install yq
          command: |
            mkdir -p $HOME/yq
            curl -L https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_amd64 -o $HOME/yq/yq &&\
              chmod +x $HOME/yq/yq &&\
              echo 'export PATH=$HOME/yq/yq:$PATH' >> $BASH_ENV
  install_gh:
    description: "Install GitHub Cli"
    steps:
      - run:
          name: Install gh
          command: |
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt update
            sudo apt install gh
  set_sdk_version:
    description: "Set Daml SDK version environment version"
    steps:
      - run:
          name: Set Daml SDK version
          command: echo 'export SDK_VERSION=$(yq e '.sdk-version' daml.yaml)' >> $BASH_ENV
  run_release:
    description: "Run Release"
    steps:
      - run:
          name: "Get target release version"
          command: echo 'export VERSION=$(yq e '.version' daml.yaml)' >> $BASH_ENV
      - run:
          name: "Validate target release version"
          command: |
            if [ `git tag | grep ${VERSION} | wc -l` -eq 0 ]; then
              echo "New tag detected ${VERSION}. Releasing..."
            else
              echo "Tag ${VERSION} already exists; Skipping Release."
              circleci-agent step halt
            fi
      # - add_ssh_keys:
      #     fingerprints:
      #       - "c6:75:e6:07:68:9a:a1:99:93:9f:cd:d1:3a:89:49:4a"
      - run:
          name: "Tag and push to Github"
          command: |
            # gh auth login -h github.com -p ssh # --with-token < MY_TOKEN_HERE
            gh auth login -h github.com --with-token
            gh release create v${VERSION} ./daml/dist/daml-ctl-${VERSION}.dar --generate-notes
            # git tag v${VERSION}
            # git push origin v${VERSION}
      - store_artifacts:
          path:
            path: ./daml/dist/daml-ctl-${VERSION}.dar
            destination: daml-ctl-dar


jobs:
  build:
    executor: daml-docker-executor
    steps:
      - checkout
      - install_yq
      - restore_cache:
          keys:
            - daml-{{ checksum "daml.yaml" }}
      - set_sdk_version
      - install_sdk
      - run:
          name: Daml build
          command: daml build
      - run:
          name: Daml test
          command: daml test
      - save_cache:
          paths:
            - ~/.daml
          key: daml-{{ checksum "daml.yaml" }}
  release:
    executor: daml-docker-executor
    steps:
      - checkout
      - install_yq
      - install_gh
      - restore_cache:
          keys:
            - daml-{{ checksum "daml.yaml" }}
      - run_release

workflows:
  version: 2
  daml_ctl_build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
  daml_ctl_release:
    jobs:
      - build
          # filters:
          #   branches:
          #     only:
          #       - master
      - release:
          context: github-fin-eng-context
          requires:
            - build
          # filters:
          #   branches:
          #     only:
          #       - master